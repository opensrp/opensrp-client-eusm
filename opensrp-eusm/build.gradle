buildscript {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath 'com.google.gms:google-services:4.3.4'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.4.1'
        classpath 'org.smartregister:gradle-jarjar-plugin:1.0.0-SNAPSHOT'
        classpath "gradle.plugin.org.kt3k.gradle.plugin:coveralls-gradle-plugin:$coverallsVersion"
    }
}

allprojects {
    repositories {
        maven { url 'https://maven.google.com' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "http://dl.bintray.com/ona/kujaku" }
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://dl.bintray.com/ibm-watson-health/ibm-fhir-server-releases' }
        mavenLocal()
    }
}

apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'org.smartregister.gradle.jarjar'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

jacoco {
    toolVersion = "0.8.0"
}


android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidToolsBuildGradle

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "org.smartregister.eusm"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 2
        versionName "0.1.4"
        multiDexEnabled true
        buildConfigField "long", "MAX_SERVER_TIME_DIFFERENCE", "1800000l"
        buildConfigField "boolean", "TIME_CHECK", "false"
        buildConfigField "String", "SYNC_TYPE", '"teamId"'
        buildConfigField "int", "MAX_SYNC_RETRIES", '3'
        buildConfigField "long", "BUILD_TIMESTAMP", System.currentTimeMillis() + "L"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [eventBusIndex: 'org.smartregister.eusm.RevelEventBusIndex']
            }
        }

        if (project.rootProject.file("local.properties").exists()) {
            Properties properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
            if (properties != null &&
                    properties.containsKey("mapbox.sdk.token")) {
                buildConfigField "String", "MAPBOX_SDK_ACCESS_TOKEN", properties["mapbox.sdk.token"]
            } else {
                println("Mapbox key config variables is not set in your local.properties")
                buildConfigField "String", "MAPBOX_SDK_ACCESS_TOKEN", "\"sample_key\""
            }

            if (properties != null &&
                    properties.containsKey("digital.globe.connectId")) {
                buildConfigField "String", "DG_CONNECT_ID", properties["digital.globe.connectId"]
            } else {
                println("Digital Globe config variables is not set in your local.properties")
                buildConfigField "String", "DG_CONNECT_ID", "\"sample_key\""
            }

            if (properties != null && properties.containsKey("oauth.client.id")) {

                buildConfigField "String", "OAUTH_CLIENT_ID", properties["oauth.client.id"]

            } else {
                project.logger.error("oauth.client.id variable is not set in your local.properties")
            }


            if (properties != null && properties.containsKey("oauth.client.secret")) {

                buildConfigField "String", "OAUTH_CLIENT_SECRET", properties["oauth.client.secret"]

            } else {
                project.logger.error("oauth.client.secret variable is not set in your local.properties")
            }


        } else {
            println("local.properties does not exist")
            buildConfigField "String", "MAPBOX_SDK_ACCESS_TOKEN", "\"sample_key\""
            buildConfigField "String", "DG_CONNECT_ID", "\"sample_key\""
            buildConfigField "String", "OAUTH_CLIENT_ID", "\"sample_client_id\""
            buildConfigField "String", "OAUTH_CLIENT_SECRET", "\"sample_client_secret\""
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        lintConfig file("lint.xml")
        abortOnError false
    }

    buildTypes {

        release {
            minifyEnabled false
            zipAlignEnabled true

            resValue "string", 'opensrp_url', '"https://unicef-mg-eusm.smartregister.org/opensrp/"'
            buildConfigField "int", "DATABASE_VERSION", '1'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_INITIAL_BATCH_SIZE", '250'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_BATCH_SIZE", '100'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_SOURCE", '2'
            buildConfigField "long", "SYNC_INTERVAL_IN_MINUTES", '15'
            buildConfigField "long", "PULL_UNIQUE_IDS_MINUTES", '15'
            buildConfigField "String", "ADMIN_PASSWORD_NOT_NEAR_STRUCTURES", '"AdminPass1"'
            buildConfigField "float", "MY_LOCATION_BUFFER", '25'
            buildConfigField "boolean", "VALIDATE_FAR_STRUCTURES", 'false'
            buildConfigField "int", "RESOLVE_LOCATION_TIMEOUT_IN_SECONDS", '60'
            buildConfigField "boolean", "DISPLAY_OUTSIDE_OPERATIONAL_AREA_MASK", 'false'
            buildConfigField "boolean", "DISPLAY_DISTANCE_SCALE", 'true'
            buildConfigField "String[]", "FACILITY_LEVELS", '{"Country", "Region", "District"}'
            buildConfigField "String[]", "LOCATION_LEVELS", '{"Country", "Region", "District"}'

            testCoverageEnabled true
        }

        debug {
            resValue "string", 'opensrp_url', '"https://mg-eusm-staging.smartregister.org/opensrp/"'
            buildConfigField "int", "DATABASE_VERSION", '1'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_INITIAL_BATCH_SIZE", '250'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_BATCH_SIZE", '100'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_SOURCE", '2'
            buildConfigField "long", "SYNC_INTERVAL_IN_MINUTES", '15'
            buildConfigField "long", "PULL_UNIQUE_IDS_MINUTES", '15'
            buildConfigField "String", "ADMIN_PASSWORD_NOT_NEAR_STRUCTURES", '"AdminPass1"'
            buildConfigField "float", "MY_LOCATION_BUFFER", '25'
            buildConfigField "boolean", "VALIDATE_FAR_STRUCTURES", 'false'
            buildConfigField "int", "RESOLVE_LOCATION_TIMEOUT_IN_SECONDS", '60'
            buildConfigField "boolean", "DISPLAY_OUTSIDE_OPERATIONAL_AREA_MASK", 'false'
            buildConfigField "boolean", "DISPLAY_DISTANCE_SCALE", 'true'
            buildConfigField "String[]", "FACILITY_LEVELS", '{"Country", "Region", "District"}'
            buildConfigField "String[]", "LOCATION_LEVELS", '{"Country", "Region", "District"}'

            testCoverageEnabled true
        }

    }

    packagingOptions {
        exclude 'META-INF/*'
        exclude 'LICENSE.txt'

    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }

}

tasks.withType(Test) {
    testLogging.exceptionFormat "full"
    jacoco.includeNoLocationClasses = true
    maxHeapSize = "2g"
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.10'

    implementation('io.ona.kujaku:library:0.9.0') {
        exclude group: 'com.android.volley'
        exclude group: 'stax', module: 'stax-api'
    }

    jarJar 'com.ibm.fhir:fhir-model:4.7.0'

    implementation('org.smartregister:opensrp-client-core:4.3.16-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.github.ybq', module: 'Android-SpinKit'
        exclude group: 'org.apache.httpcomponents', module: 'httpmime'
        exclude group: 'com.github.ybq', module: 'Android-SpinKit'
        exclude group: 'com.github.bmelnychuk', module: 'atv'
        exclude group: 'com.google.android.gms', module: 'play-services-vision'
        exclude group: 'com.ibm.fhir', module: 'fhir-model'
    }

    implementation('org.smartregister:opensrp-client-configurable-views:1.1.5-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }

    implementation('org.smartregister:opensrp-client-native-form:2.1.8-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'cardview-v7'
        exclude group: 'com.android.support', module: 'support-media-compat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'io.ona.rdt-capture', module: 'lib'
    }

//    implementation(project(':opensrp-tasking')) {
    implementation('org.smartregister:opensrp-client-tasking:0.0.3-v18-r5-EUSM-SNAPSHOT') {
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'com.ibm.fhir', module: 'fhir-model'
        exclude group: 'io.ona.kujaku', module: 'library'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
    }

    api('org.smartregister:opensrp-client-stock:1.2.4-SNAPSHOT') {
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'com.ibm.fhir', module: 'fhir-model'
    }

    implementation 'com.google.android:flexbox:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.github.ybq:Android-SpinKit:1.2.0'
    implementation 'com.evernote:android-job:1.2.6'
    implementation 'com.google.firebase:firebase-crashlytics:17.3.0'
    implementation 'com.github.ybq:Android-SpinKit:1.2.0'
    implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-scalebar-v8:0.3.0'
    implementation 'id.zelory:compressor:2.1.0'
    implementation 'com.mapbox.mapboxsdk:mapbox-sdk-turf:5.1.0'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testImplementation 'com.ibm.fhir:fhir-model:4.7.0'

    testImplementation 'junit:junit:4.12'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: '2.2'
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'
    testImplementation('com.squareup:fest-android:1.0.8') { exclude module: 'support-v4' }

    testImplementation 'org.mockito:mockito-core:3.1.0'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation 'org.robolectric:shadows-multidex:4.3.1'
    testImplementation "org.json:json:20190722"

    // PowerMock
    def powerMockVersion = '2.0.4'
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$powerMockVersion"

    def fragment_version = "1.2.5"

    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    getReports().getXml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"))
    getReports().getHtml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/html"))

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android*/**/*.*', '**/*$ViewBinder*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug/classes", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.from(files([mainSrc]))
    classDirectories.from(files([debugTree]))
    executionData.from(fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ]))
}

tasks.coveralls {
    dependsOn 'jacocoTestReport'
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"
    sourceDirs = ["$project.projectDir/src/main/java"]
}

task javadoc(type: Javadoc) {
    failOnError false
    def mainSrc = "$project.projectDir/src/main/java"
    source = files([mainSrc])
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

jarJar {

    // Dependencies and related JarJar rules
    remove = ['fhir-model-4.7.0.jar': 'com.ibm.fhir.model.visitor.CopyingVisitor*']
}
